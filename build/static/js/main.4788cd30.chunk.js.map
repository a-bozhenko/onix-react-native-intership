{"version":3,"sources":["api/config.js","api/endpoints.js","entities/FilmsParams.js","entities/PlanetsParams.js","entities/PeopleParams.js","entities/VehiclesParams.js","entities/StarshipsParams.js","entities/SpeciesParams.js","helpers/constants.js","helpers/title.js","helpers/url.js","components/Loader/index.js","containers/MainWrapper/index.js","components/UrlsArray/index.js","components/SingleAnyItem/index.js","components/BackButton/index.js","components/Header/index.js","screens/DetailsScreen/index.js","api/search.js","components/SearchButton/index.js","components/SearchField/index.js","components/ButtonSwitcher/index.js","components/Pagination/index.js","helpers/pagination.js","components/ListAnyItem/index.js","components/ItemsList/index.js","screens/MainScreen/index.js","screens/RootRouter.js","App.js","reportWebVitals.js","index.js"],"names":["REQUEST_TYPES","replaceUrlPlaceholder","url","param","val","replace","getRequestConfig","method","endpoint","config","process","data","makeParams","params","ENDPOINTS","FilmsParams","props","this","search","query","page","PlanetsParams","PeopleParams","VehiclesParams","StarshipsParams","SpeciesParams","CONTENT_TYPES","makeFormattedFieldName","unformattedName","string","withoutUnderline","replaceAll","charAt","toUpperCase","slice","toLowerCase","urlReader","Loader","className","MainWrapper","children","UrlsArray","urls","drawUrlItem","index","number","onClick","onItemPress","document","location","pathname","map","item","EXCLUDED_FIELDS","DATE_FIELDS","URL_FIELDS","SingleAnyItem","drawDate","date","moment","format","title","name","Object","entries","field","fieldArr","fieldNameWithoutFormat","formattedFieldName","fieldBody","includes","Array","isArray","length","drawField","BackButton","history","useHistory","goBack","Header","withBackButton","DetailsScreen","type","itemId","useParams","id","useState","loading","setLoading","setItem","error","setError","useEffect","onSuccess","onError","endPoint","paramsByType","Promise","resolve","reject","axios","then","response","catch","getSingleItemByTypeAndId","getTitle","SearchButton","text","SearchField","placeholderText","onChange","value","onSearch","searchButtonText","placeholder","e","target","onKeyPress","charCode","ButtonSwitcher","buttons","selected","setSelected","drawButton","button","checked","htmlFor","defaultProps","Pagination","count","current","numberOfButtons","Math","ceil","getNumberOfPages","fill","pageNumber","fixZeroPage","ListAnyItem","isLast","ItemsList","items","itemsType","drawItem","MainScreen","setQuery","setType","setPage","setCount","setItems","getAnyItemByType","results","scrollToTop","window","scrollTo","top","left","behavior","newQuery","newType","newPage","RootRouter","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"+iBAAaA,EACL,OADKA,EAEN,MAMMC,EAAwB,SAACC,EAAKC,EAAOC,GAChD,OAAOF,EAAIG,QAAQ,IAAMF,EAAQ,IAAKC,IAU3BE,EAAmB,SAACC,EAAQC,GACvC,IAAIC,EAAS,CACXF,OAAQA,EACRL,IAAKQ,yBAAgCF,GAOvC,OAJID,IAAWP,IACbS,EAAOE,KAAO,IAGTF,GAGIG,EAAa,SAACC,GACzB,OAAO,eAAKA,ICjCDC,EACK,SADLA,EAEW,cAFXA,EAII,QAJJA,EAKU,aALVA,EAOQ,YAPRA,EAQc,iBARdA,EAUO,WAVPA,EAWa,gBAXbA,EAaK,UAbLA,EAcW,eAdXA,EAgBM,UAhBNA,EAiBY,e,uBCZJC,EACnB,WAAYC,GAAQ,oBAClBC,KAAKC,OAASF,EAAMG,OAAS,GAC7BF,KAAKG,KAAOJ,EAAMI,MAAQ,GCFTC,EACnB,WAAYL,GAAQ,oBAClBC,KAAKC,OAASF,EAAMG,OAAS,GAC7BF,KAAKG,KAAOJ,EAAMI,MAAQ,GCHTE,EACnB,WAAYN,GAAQ,oBAClBC,KAAKC,OAASF,EAAMG,OAAS,GAC7BF,KAAKG,KAAOJ,EAAMI,MAAQ,GCFTG,EACnB,WAAYP,GAAQ,oBAClBC,KAAKC,OAASF,EAAMG,OAAS,GAC7BF,KAAKG,KAAOJ,EAAMI,MAAQ,GCHTI,EACnB,WAAYR,GAAQ,oBAClBC,KAAKC,OAASF,EAAMG,OAAS,GAC7BF,KAAKG,KAAOJ,EAAMI,MAAQ,GCJTK,EACnB,WAAYT,GAAQ,oBAClBC,KAAKC,OAASF,EAAMG,OAAS,GAC7BF,KAAKG,KAAOJ,EAAMI,MAAQ,GCTjBM,EACJ,QADIA,EAEH,SAFGA,EAGF,UAHEA,EAIF,UAJEA,EAKA,YALAA,EAMD,WCFCC,EAAyB,SAACC,GACrC,IALyBC,EAKnBC,EAAmBF,EAAgBG,WAAW,IAAK,KAEzD,OAPyBF,EAOPC,GANJE,OAAO,GAAGC,cAAgBJ,EAAOK,MAAM,GAAGC,eCD7CC,EAAY,SAAClC,GACxB,OAAOA,EAAIG,QAAQ,yBAA0B,K,eCUhCgC,EARA,WACb,OACE,qBAAKC,UAAW,gBAAhB,SACE,mBAAGA,UAAW,aAAd,2BCCSC,G,MAJK,SAACvB,GACnB,OAAO,qBAAKsB,UAAW,cAAhB,SAAgCtB,EAAMwB,a,yBCiChCC,G,YAhCG,SAACzB,GACjB,IAAQ0B,EAAS1B,EAAT0B,KAMFC,EAAc,SAACzC,EAAK0C,GACxB,IAAMC,EAASD,EAAQ,EAEvB,OACE,qBAEEE,QAAS,kBAAMC,EAAY7C,IAC3BoC,UAAW,uBAHb,SAKE,mBAAGA,UAAW,oBAAd,SAAoCO,KAJ/B3C,IASL6C,EAAc,SAAC7C,GACnB8C,SAASC,SAASC,SAAWd,EAAUlC,IAGzC,OAAO,qBAAKoC,UAAW,oBAAhB,SArBEI,EAAKS,KAAI,SAACC,EAAMR,GAAP,OAAiBD,EAAYS,EAAMR,UCFjDS,EAAkB,CAAC,OACnBC,EAAc,CAAC,UAAW,UAC1BC,EAAa,CAAC,aAgFLC,GA9EO,SAACxC,GACrB,IAAQoC,EAASpC,EAAToC,KAqDFK,EAAW,SAACC,GAChB,OAAOC,IAAOD,GAAME,OAAO,eAQ7B,OACE,sBAAKtB,UAAW,uBAAhB,UACGc,EAAKS,OAAS,mBAAGvB,UAAW,qBAAd,SAAqCc,EAAKS,QACxDT,EAAKU,MAAQ,mBAAGxB,UAAW,qBAAd,SAAqCc,EAAKU,OAPvCC,OAAOC,QAAQZ,GAChBD,KAAI,SAACc,GAAD,OAzDN,SAACC,GACjB,IAAMC,EAAyBD,EAAS,GAClCE,EAAqBzC,EAAuBwC,GAC5CE,EAAYH,EAAS,GAE3B,OAAIb,EAAgBiB,SAASH,GAAgC,KAEzDb,EAAYgB,SAASH,GAErB,qBAAK7B,UAAW,qBAAhB,SACE,mBAAGA,UAAW,yBAAd,SACG8B,EAAqB,KAAOX,EAASY,MAFCF,GAO3CZ,EAAWe,SAASH,GAEpB,sBAAK7B,UAAW,qBAAhB,UACE,mBAAGA,UAAW,yBAAd,SACG8B,EAAqB,OAExB,cAAC,EAAD,CAAW1B,KAAM,CAAC2B,OAJuBF,GAStB,kBAAdE,EAEP,qBAAK/B,UAAW,qBAAhB,SACE,mBAAGA,UAAW,yBAAd,SACG8B,EAAqB,KAAOC,KAFUF,GAQ3CI,MAAMC,QAAQH,IAAgBA,EAAUI,OAExC,sBAAKnC,UAAW,qBAAhB,UACE,mBAAGA,UAAW,yBAAd,SACG8B,EAAqB,OAExB,cAAC,EAAD,CAAW1B,KAAM2B,MAJwBF,GASxC,KAS0BO,CAAUT,UCzDhCU,I,YAVI,WACjB,IAAMC,EAAUC,cAEhB,OACE,qBAAK/B,QAAS,kBAAM8B,EAAQE,UAAUxC,UAAW,oBAAjD,SACE,mBAAGA,UAAW,iBAAd,SAAiC,UCiBxByC,GArBA,SAAC/D,GACd,IAAQ6C,EAA0B7C,EAA1B6C,MAAOmB,EAAmBhE,EAAnBgE,eAEf,OACE,sBAAK1C,UAAW,aAAhB,UACG0C,EACC,cAAC,GAAD,IAEA,qBAAK1C,UAAW,+BAElB,oBAAIA,UAAW,cAAf,SAA+BuB,IAC/B,qBAAKvB,UAAW,mCCiEP2C,GAtEO,SAACjE,GACrB,IAAQkE,EAASlE,EAATkE,KAEIC,EADGC,cACPC,GACR,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBAAS,MAAjC,mBAAOlC,EAAP,KAAaqC,EAAb,KACA,EAA0BH,mBAAS,IAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAEAC,qBAAU,YC2E4B,SACtCV,EACAG,EACAxE,EACAgF,EACAC,GAEA,IAAIC,EACAC,EAEJ,OAAQd,GACN,KAAKxD,EACHqE,EAAWjF,EACXkF,EAAepF,EAAW,IAAIG,EAAYF,IAC1C,MAEF,KAAKa,EACHqE,EAAWjF,EACXkF,EAAepF,EAAW,IAAIU,EAAaT,IAC3C,MAEF,KAAKa,EACHqE,EAAWjF,EACXkF,EAAepF,EAAW,IAAIS,EAAcR,IAC5C,MAEF,KAAKa,EACHqE,EAAWjF,EACXkF,EAAepF,EAAW,IAAIa,EAAcZ,IAC5C,MAEF,KAAKa,EACHqE,EAAWjF,EACXkF,EAAepF,EAAW,IAAIY,EAAgBX,IAE9C,MAEF,KAAKa,EACHqE,EAAWjF,EACXkF,EAAepF,EAAW,IAAIW,EAAeV,IAC7C,MAEF,QACEkF,EAAWjF,EACXkF,EAAepF,EAAW,IAAIU,EAAaT,IAK/C,IAAMX,EAAMD,EAAsB8F,EAAU,KAAMV,GAE5C5E,EAASH,EAAiBN,EAAmBE,GAInD,OAFAO,EAAOI,OAASmF,EAET,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,IAAM3F,GACH4F,MAAK,SAACC,GACLJ,EAAQI,EAAS3F,MACjBkF,GAAaA,EAAUS,EAAS3F,SAEjC4F,OAAM,SAACb,GACNS,EAAOT,GACPI,GAAWA,EAAQJ,UDzIvBc,CAAyBtB,EAAMC,EAAQ,IACpCkB,MAAK,SAACC,GACLX,EAAS,IACTF,EAAQa,GACRd,GAAW,MAEZe,OAAM,WACLZ,EAAS,wBACTH,GAAW,QAEd,CAACN,EAAMC,IAkCV,OACE,qCACE,cAAC,GAAD,CAAQtB,MAlCK,WACf,OAAQqB,GACN,KAAKxD,EACH,MAAO,cAGT,KAAKA,EACH,MAAO,mBAGT,KAAKA,EACH,MAAO,gBAGT,KAAKA,EACH,MAAO,iBAGT,KAAKA,EACH,MAAO,kBAGT,KAAKA,EACH,MAAO,iBAGT,QACE,MAAO,yBAOM+E,GAAYzB,gBAAc,IACzC,qBAAK1C,UAAW,oBAAhB,SACE,eAAC,EAAD,WACGiD,EAAU,cAAC,EAAD,IAAa,cAAC,GAAD,CAAenC,KAAMA,MAC1CsC,GAAS,4BAAIA,aEnDXgB,I,YAfM,SAAC1F,GACpB,IAAQ8B,EAAkB9B,EAAlB8B,QAAS6D,EAAS3F,EAAT2F,KAEjB,OACE,qBAAK7D,QAASA,EAASR,UAAW,sBAAlC,SACE,mBAAGA,UAAW,mBAAd,SAAmCqE,QCmC1BC,GA/BK,SAAC5F,GACnB,IAAQ6F,EACN7F,EADM6F,gBAAiBC,EACvB9F,EADuB8F,SAAUC,EACjC/F,EADiC+F,MAAOC,EACxChG,EADwCgG,SAAUC,EAClDjG,EADkDiG,iBAapD,OACE,sBAAK3E,UAAW,gBAAhB,UACE,uBACEA,UAAW,cACX4C,KAAM,OACNgC,YAAaL,EACbC,SAhBiB,SAACK,GACtBL,EAASK,EAAEC,OAAOL,QAgBdA,MAAOA,EACPM,WAdmB,SAACF,GACL,KAAfA,EAAEG,UACJN,OAcA,cAAC,GAAD,CAAclE,QAASkE,EAAUL,KAAMM,QCjCvCM,I,MAAiB,SAACvG,GACtB,IAAQwG,EAA4BxG,EAA5BwG,QAASV,EAAmB9F,EAAnB8F,SAAUhD,EAAS9C,EAAT8C,KAC3B,EAAgCwB,mBAASkC,EAAQ,IAAjD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA9B,qBAAU,WACRkB,EAASW,KACR,CAACA,IAEJ,IAIME,EAAa,SAACC,GAClB,OACE,sBAAqBtF,UAAW,iBAAhC,UACE,uBACE4C,KAAK,QACLpB,KAAMA,EACNuB,GAAIuC,EAAOvC,GACXwC,QAASJ,EAASpC,KAAOuC,EAAOvC,GAChCyB,SAAU,kBAAMY,EAAYE,IAC5BtF,UAAW,wBAEb,uBAAOwF,QAASF,EAAOvC,GAAI/C,UAAW,sBAAtC,SACGsF,EAAOjB,SAVFiB,EAAOvC,KAgBrB,OAAO,qBAAK/C,UAAW,wBAAhB,SArBEkF,EAAQrE,IAAIwE,OA2BvBJ,GAAeQ,aAAe,CAC5BP,QAAS,GACTV,SAAU,cAGGS,UC9BTS,I,MAAa,SAAChH,GAClB,IAAQiH,EAA6BjH,EAA7BiH,MAAOC,EAAsBlH,EAAtBkH,QAASpB,EAAa9F,EAAb8F,SAElBqB,EAAkB,IAAI5D,MClBE,SAAC0D,GAC/B,OAAOG,KAAKC,KAAKJ,EAAQ,IDiBSK,CAAiBL,IAAQM,OAsB3D,OAAO,qBAAKjG,UAAW,oBAAhB,SAHE6F,EAAgBhF,KAAI,SAACC,EAAMR,GAAP,OAjBV,SAAC4F,GAClB,IAAMC,EAAcD,EAAa,EAEjC,OACE,qBACE1F,QAAS,kBAAMgE,EAAS2B,IAExBnG,UAAS,2BACP4F,IAAYO,GAAe,0BAJ/B,SAOE,mBAAGnG,UAAW,uBAAd,SAAuCmG,KAPzC,aAEaA,IAW6Bd,CAAW/E,UAO3DoF,GAAWD,aAlCU,CACnBE,MAAO,GACPC,QAAS,GAkCIF,UEzCT3E,I,MAAkB,CAEtB,MACA,YAEA,UACA,WAoDaqF,GAlDK,SAAC1H,GACnB,IAAQoC,EAAiBpC,EAAjBoC,KAAMuF,EAAW3H,EAAX2H,OA+Bd,OACE,sBACErG,UAAS,6BAAwBqG,GAAU,0BAC3C7F,QAAS,WANXE,SAASC,SAASC,SAAWd,EAAUgB,EAAKlD,MAI5C,UAIGkD,EAAKS,OAAS,mBAAGvB,UAAW,mBAAd,SAAmCc,EAAKS,QACtDT,EAAKU,MAAQ,mBAAGxB,UAAW,mBAAd,SAAmCc,EAAKU,OAdrCC,OAAOC,QAAQZ,GAChBD,KAAI,SAACc,GAAD,OAtBN,SAACC,GACjB,IAAMC,EAAyBD,EAAS,GAClCE,EAAqBzC,EAAuBwC,GAC5CE,EAAYH,EAAS,GAE3B,OAAIb,GAAgBiB,SAASH,GAAgC,KAEpC,kBAAdE,EAEP,qBAAK/B,UAAW,mBAAhB,SACE,mBAAGA,UAAW,uBAAd,SACG8B,EAAqB,KAAOC,KAFQF,GAQtC,KAK0BO,CAAUT,UCvBzC2E,I,MAAY,SAAC5H,GACjB,IAAQ6H,EAAqB7H,EAArB6H,MAAOC,EAAc9H,EAAd8H,UAMTC,EAAW,SAAC3F,EAAMR,GACtB,IAAM+F,EAAS/F,IAAUiG,EAAMpE,OAAS,EAExC,OACE,8BACE,cAAC,GAAD,CAAarB,KAAMA,EAAM0F,UAAWA,EAAWH,OAAQA,KADzD,aAAgBvF,EAAKlD,OAMzB,OAAO,qBAAKoC,UAAW,mBAAhB,SAbEuG,EAAM1F,KAAI,SAACC,EAAMR,GAAP,OAAiBmG,EAAS3F,EAAMR,UAiBrDgG,GAAUb,aA1BW,CACnBc,MAAO,GACPC,UAAW,CAAEnC,KAAM,QAAStB,GAAI3D,IA0BnBkH,UCwEAI,I,MAnGI,WACjB,MAA0B1D,mBAAS,IAAnC,mBAAOnE,EAAP,KAAc8H,EAAd,KACA,EAAwB3D,mBAAS,CAAEqB,KAAM,QAAStB,GAAI3D,IAAtD,mBAAOwD,EAAP,KAAagE,EAAb,KACA,EAAwB5D,mBAAS,GAAjC,mBAAOlE,EAAP,KAAa+H,EAAb,KACA,EAA0B7D,mBAAS,GAAnC,mBAAO2C,EAAP,KAAcmB,EAAd,KACA,EAA0B9D,mBAAS,IAAnC,mBAAOuD,EAAP,KAAcQ,EAAd,KACA,EAA0B/D,mBAAS,IAAnC,mBAAOI,EAAP,KAAcC,EAAd,KACA,EAA8BL,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,GAAhB,KAEAI,qBAAU,WACRoB,OACC,CAAC5F,EAAM8D,IAEV,IAAM8B,GAAW,YREa,SAAU9B,EAAMrE,EAAQgF,EAAWC,GACjE,IAAIC,EACAC,EAEJ,OAAQd,GACN,KAAKxD,EACHqE,EAAWjF,EACXkF,EAAepF,EAAW,IAAIG,EAAYF,IAC1C,MA4BF,QACEkF,EAAWjF,EACXkF,EAAepF,EAAW,IAAIU,EAAaT,IAC3C,MAxBF,KAAKa,EACHqE,EAAWjF,EACXkF,EAAepF,EAAW,IAAIS,EAAcR,IAC5C,MAEF,KAAKa,EACHqE,EAAWjF,EACXkF,EAAepF,EAAW,IAAIa,EAAcZ,IAC5C,MAEF,KAAKa,EACHqE,EAAWjF,EACXkF,EAAepF,EAAW,IAAIY,EAAgBX,IAE9C,MAEF,KAAKa,EACHqE,EAAWjF,EACXkF,EAAepF,EAAW,IAAIW,EAAeV,IAUjD,IAAMJ,EAASH,EAAiBN,EAAmB+F,GACnDtF,EAAOI,OAASmF,EAET,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,IAAM3F,GACH4F,MAAK,SAACC,GACLJ,EAAQI,EAAS3F,MACjBkF,GAAaA,EAAUS,EAAS3F,SAEjC4F,OAAM,SAACb,GACNS,EAAOT,GACPI,GAAWA,EAAQJ,SQvDvB4D,CACEpE,EAAKG,GACL,CACEjE,OACAD,UAEF,SAACmF,GACC8C,EAAS9C,EAAS2B,OAClBoB,EAAS/C,EAASiD,SAClBC,KACAhE,IAAW,GACXG,EAAS,OAEX,WACEwD,EAAQ,GACRxD,EAAS,wBACTH,IAAW,OAKXgE,GAAc,WAClBC,OAAOC,SAAS,CAAEC,IAAK,EAAGC,KAAM,EAAGC,SAAU,YAiB/C,OACE,qCACE,cAAC,GAAD,CAAQhG,MAAO,0BACf,qBAAKvB,UAAW,iBAAhB,SACGiD,EACC,cAAC,EAAD,IAEA,eAAC,EAAD,WACE,cAAC,GAAD,CACEsB,gBAAiB,aACjBC,SAxBU,SAACgD,GACrBb,EAASa,IAwBC/C,MAAO5F,EACP6F,SAAUA,GACVC,iBAAkB,WAGpB,cAAC,GAAD,CACEQ,SAAUvC,EACVpB,KAAM,eACNgD,SA7BS,SAACiD,GACpBd,EAAS,IACTE,EAAQ,GACRD,EAAQa,IA2BEvC,QAAS,CACP,CAAEb,KAAM,QAAStB,GAAI3D,GACrB,CAAEiF,KAAM,SAAUtB,GAAI3D,GACtB,CAAEiF,KAAM,UAAWtB,GAAI3D,GACvB,CAAEiF,KAAM,UAAWtB,GAAI3D,GACvB,CAAEiF,KAAM,YAAatB,GAAI3D,GACzB,CAAEiF,KAAM,WAAYtB,GAAI3D,QAIzBgE,GAAS,4BAAIA,IAEhB,cAAC,GAAD,CAAWmD,MAAOA,EAAOC,UAAW5D,IAEpC,cAAC,GAAD,CACE+C,MAAOA,EACPC,QAAS9G,EACT0F,SAzCe,SAACkD,GAC1Bb,EAAQa,gBCzBGC,OA/Bf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,GAAD,MAGF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,aAAlB,SACE,cAAC,GAAD,CAAejF,KAAMxD,MAEvB,cAAC,IAAD,CAAOwI,OAAK,EAACC,KAAK,eAAlB,SACE,cAAC,GAAD,CAAejF,KAAMxD,MAEvB,cAAC,IAAD,CAAOwI,OAAK,EAACC,KAAK,gBAAlB,SACE,cAAC,GAAD,CAAejF,KAAMxD,MAEvB,cAAC,IAAD,CAAOwI,OAAK,EAACC,KAAK,cAAlB,SACE,cAAC,GAAD,CAAejF,KAAMxD,MAEvB,cAAC,IAAD,CAAOwI,OAAK,EAACC,KAAK,eAAlB,SACE,cAAC,GAAD,CAAejF,KAAMxD,MAEvB,cAAC,IAAD,CAAOwI,OAAK,EAACC,KAAK,iBAAlB,SACE,cAAC,GAAD,CAAejF,KAAMxD,YCtBhB0I,OAJf,WACE,OAAO,cAAC,GAAD,KCQMC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlE,MAAK,YAAkD,IAA/CmE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEF/H,SAASgI,eAAe,SAM1BX,O","file":"static/js/main.4788cd30.chunk.js","sourcesContent":["export const REQUEST_TYPES = {\n  POST: \"POST\",\n  GET: \"GET\",\n  PUT: \"PUT\",\n  PATCH: \"PATCH\",\n  DEL: \"DELETE\",\n};\n\nexport const replaceUrlPlaceholder = (url, param, val) => {\n  return url.replace(\"{\" + param + \"}\", val);\n};\n\nexport const replaceUrlPlaceholders = (url, data) => {\n  Object.keys(data).forEach((key) => {\n    url = replaceUrlPlaceholder(url, key, data[key]);\n  });\n  return url;\n};\n\nexport const getRequestConfig = (method, endpoint) => {\n  let config = {\n    method: method,\n    url: process.env.REACT_APP_API_URL + endpoint,\n  };\n\n  if (method === REQUEST_TYPES.POST) {\n    config.data = {};\n  }\n\n  return config;\n};\n\nexport const makeParams = (params) => {\n  return { ...params };\n};\n","export const ENDPOINTS = {\n  API_GET_PEOPLE: \"people\",\n  API_GET_PEOPLE_BY_ID: \"people/{id}\",\n\n  API_GET_FILMS: \"films\",\n  API_GET_FILMS_BY_ID: \"films/{id}\",\n\n  API_GET_STARSHIPS: \"starships\",\n  API_GET_STARSHIPS_BY_ID: \"starships/{id}\",\n\n  API_GET_VEHICLES: \"vehicles\",\n  API_GET_VEHICLES_BY_ID: \"vehicles/{id}\",\n\n  API_GET_SPICES: \"species\",\n  API_GET_SPICES_BY_ID: \"species/{id}\",\n\n  API_GET_PLANETS: \"planets\",\n  API_GET_PLANETS_BY_ID: \"planets/{id}\",\n};\n","/**\n * Search Fields \"title\"\n *@param {string} search  -- The title of this film\n *@param {number} page  -- page to load content\n */\nexport default class FilmsParams {\n  constructor(props) {\n    this.search = props.query || \"\";\n    this.page = props.page || 1;\n  }\n}\n","/**\n *\n *@param {string} search  -- The name of this planet.\n *@param {number} page  -- page to load content\n\n */\nexport default class PlanetsParams {\n  constructor(props) {\n    this.search = props.query || \"\";\n    this.page = props.page || 1;\n  }\n}\n","/**\n * Search Fields - \"name\"\n *@param {string} search -- The name of this person.\n *@param {number} page  -- page to load content\n\n */\nexport default class PeopleParams {\n  constructor(props) {\n    this.search = props.query || \"\";\n    this.page = props.page || 1;\n  }\n}\n","/**\n *Search Fields \"name\" and \"model\"\n *@param {string} search  -- The name of this vehicle. The common name, such as \"Sand Crawler\" or \"Speeder bike\".\n *@param {string} model  -- The model or official name of this vehicle. Such as \"All-Terrain Attack Transport\".\n *@param {number} page  -- page to load content\n\n */\nexport default class VehiclesParams {\n  constructor(props) {\n    this.search = props.query || \"\";\n    this.page = props.page || 1;\n  }\n}\n","/**\n *Search Fields \"name\" and \"model\"\n *@param {string} search  -- The name of this starship. The common name, such as \"Death Star\".\n *@param {string} model  -- The model or official name of this starship. Such as \"T-65 X-wing\" or \"DS-1 Orbital Battle Station\".\n *@param {number} page  -- page to load content\n\n */\nexport default class StarshipsParams {\n  constructor(props) {\n    this.search = props.query || \"\";\n    this.page = props.page || 1;\n  }\n}\n","/**\n *\n *@param {string} search  -- The name of this species.\n *@param {number} page  -- page to load content\n\n */\nexport default class SpeciesParams {\n  constructor(props) {\n    this.search = props.query || \"\";\n    this.page = props.page || 1;\n  }\n}\n","export const CONTENT_TYPES = {\n  FILMS: \"films\",\n  PEOPLE: \"people\",\n  PLANETS: \"planets\",\n  SPECIES: \"species\",\n  STARSHIPS: \"starships\",\n  VEHICLES: \"vehicles\",\n};\n","export const capitalize = (string) => {\n  return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n};\n\nexport const makeFormattedFieldName = (unformattedName) => {\n  const withoutUnderline = unformattedName.replaceAll(\"_\", \" \");\n\n  return capitalize(withoutUnderline);\n};\n","export const urlReader = (url) => {\n  return url.replace(\"https://swapi.dev/api/\", \"\");\n};\n","import React from \"react\";\nimport \"./styles.css\";\n\nconst Loader = () => {\n  return (\n    <div className={\"loaderWrapper\"}>\n      <p className={\"loaderText\"}>Loading...</p>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport \"./styles.css\";\n\nconst MainWrapper = (props) => {\n  return <div className={\"mainWrapper\"}>{props.children}</div>;\n};\n\nexport default MainWrapper;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { urlReader } from \"../../helpers\";\nimport \"./styles.css\";\n\nconst UrlsArray = (props) => {\n  const { urls } = props;\n\n  const drawArrayOfUrls = () => {\n    return urls.map((item, index) => drawUrlItem(item, index));\n  };\n\n  const drawUrlItem = (url, index) => {\n    const number = index + 1;\n\n    return (\n      <div\n        key={url}\n        onClick={() => onItemPress(url)}\n        className={\"urlsArrayItemWrapper\"}\n      >\n        <p className={\"urlsArrayItemText\"}>{number}</p>\n      </div>\n    );\n  };\n\n  const onItemPress = (url) => {\n    document.location.pathname = urlReader(url);\n  };\n\n  return <div className={\"urlsArrayItemRoot\"}>{drawArrayOfUrls()}</div>;\n};\n\nUrlsArray.propTypes = {\n  urls: PropTypes.array.isRequired,\n};\n\nexport default UrlsArray;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport \"./styles.css\";\nimport { makeFormattedFieldName } from \"../../helpers\";\nimport UrlsArray from \"../UrlsArray\";\n\nconst EXCLUDED_FIELDS = [\"url\"];\nconst DATE_FIELDS = [\"created\", \"edited\"];\nconst URL_FIELDS = [\"homeworld\"];\n\nconst SingleAnyItem = (props) => {\n  const { item } = props;\n\n  const drawField = (fieldArr) => {\n    const fieldNameWithoutFormat = fieldArr[0];\n    const formattedFieldName = makeFormattedFieldName(fieldNameWithoutFormat);\n    const fieldBody = fieldArr[1];\n\n    if (EXCLUDED_FIELDS.includes(fieldNameWithoutFormat)) return null;\n\n    if (DATE_FIELDS.includes(fieldNameWithoutFormat))\n      return (\n        <div className={\"singleAnyItemField\"} key={fieldNameWithoutFormat}>\n          <p className={\"singleAnyItemFieldText\"}>\n            {formattedFieldName + \": \" + drawDate(fieldBody)}\n          </p>\n        </div>\n      );\n\n    if (URL_FIELDS.includes(fieldNameWithoutFormat)) {\n      return (\n        <div className={\"singleAnyItemField\"} key={fieldNameWithoutFormat}>\n          <p className={\"singleAnyItemFieldText\"}>\n            {formattedFieldName + \": \"}\n          </p>\n          <UrlsArray urls={[fieldBody]} />\n        </div>\n      );\n    }\n\n    if (typeof fieldBody === \"string\") {\n      return (\n        <div className={\"singleAnyItemField\"} key={fieldNameWithoutFormat}>\n          <p className={\"singleAnyItemFieldText\"}>\n            {formattedFieldName + \": \" + fieldBody}\n          </p>\n        </div>\n      );\n    }\n\n    if (Array.isArray(fieldBody) && !!fieldBody.length) {\n      return (\n        <div className={\"singleAnyItemField\"} key={fieldNameWithoutFormat}>\n          <p className={\"singleAnyItemFieldText\"}>\n            {formattedFieldName + \": \"}\n          </p>\n          <UrlsArray urls={fieldBody} />\n        </div>\n      );\n    }\n\n    return null;\n  };\n\n  const drawDate = (date) => {\n    return moment(date).format(\"YYYY-MM-DD\");\n  };\n\n  const drawItemFromObject = () => {\n    const itemFields = Object.entries(item);\n    return itemFields.map((field) => drawField(field));\n  };\n\n  return (\n    <div className={\"singleAnyItemWrapper\"}>\n      {item.title && <p className={\"singleAnyItemTitle\"}>{item.title}</p>}\n      {item.name && <p className={\"singleAnyItemTitle\"}>{item.name}</p>}\n\n      {drawItemFromObject()}\n    </div>\n  );\n};\n\nSingleAnyItem.propTypes = {\n  item: PropTypes.object.isRequired,\n  isLast: PropTypes.bool,\n};\n\nexport default SingleAnyItem;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./styles.css\";\n\nconst BackButton = () => {\n  const history = useHistory();\n\n  return (\n    <div onClick={() => history.goBack()} className={\"backButtonWrapper\"}>\n      <p className={\"backButtonText\"}>{\"<\"}</p>\n    </div>\n  );\n};\n\nexport default BackButton;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles.css\";\nimport BackButton from \"../BackButton\";\n\nconst Header = (props) => {\n  const { title, withBackButton } = props;\n\n  return (\n    <div className={\"headerRoot\"}>\n      {withBackButton ? (\n        <BackButton />\n      ) : (\n        <div className={\"headerRootPseudoBackButton\"} />\n      )}\n      <h1 className={\"headerTitle\"}>{title}</h1>\n      <div className={\"headerRootPseudoBackButton\"} />\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  withBackButton: PropTypes.bool,\n};\n\nexport default Header;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useParams } from \"react-router-dom\";\nimport { getSingleItemByTypeAndId } from \"../../api\";\nimport Loader from \"../../components/Loader\";\nimport { MainWrapper } from \"../../containers\";\nimport \"./styles.css\";\nimport SingleAnyItem from \"../../components/SingleAnyItem\";\nimport Header from \"../../components/Header\";\nimport { CONTENT_TYPES } from \"../../helpers\";\n\nconst DetailsScreen = (props) => {\n  const { type } = props;\n  const params = useParams();\n  const { id: itemId } = params;\n  const [loading, setLoading] = useState(true);\n  const [item, setItem] = useState(null);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    getSingleItemByTypeAndId(type, itemId, {})\n      .then((response) => {\n        setError(\"\");\n        setItem(response);\n        setLoading(false);\n      })\n      .catch(() => {\n        setError(\"Something went wrong\");\n        setLoading(false);\n      });\n  }, [type, itemId]);\n\n  const getTitle = () => {\n    switch (type) {\n      case CONTENT_TYPES.FILMS: {\n        return \"Film detail\";\n      }\n\n      case CONTENT_TYPES.PEOPLE: {\n        return \"Character detail\";\n      }\n\n      case CONTENT_TYPES.PLANETS: {\n        return \"Planet detail\";\n      }\n\n      case CONTENT_TYPES.SPECIES: {\n        return \"Species detail\";\n      }\n\n      case CONTENT_TYPES.STARSHIPS: {\n        return \"Starship detail\";\n      }\n\n      case CONTENT_TYPES.VEHICLES: {\n        return \"Vehicle detail\";\n      }\n\n      default: {\n        return \"Star Wars Search Info\";\n      }\n    }\n  };\n\n  return (\n    <>\n      <Header title={getTitle()} withBackButton />\n      <div className={\"detailsScreenRoot\"}>\n        <MainWrapper>\n          {loading ? <Loader /> : <SingleAnyItem item={item} />}\n          {!!error && <p>{error}</p>}\n        </MainWrapper>\n      </div>\n    </>\n  );\n};\n\nDetailsScreen.propTypes = {\n  type: PropTypes.string,\n};\n\nexport default DetailsScreen;\n","import axios from \"axios\";\nimport {\n  ENDPOINTS,\n  getRequestConfig,\n  replaceUrlPlaceholder,\n  REQUEST_TYPES,\n} from \"./index\";\nimport { makeParams } from \"./config\";\nimport {\n  FilmsParams,\n  PlanetsParams,\n  PeopleParams,\n  VehiclesParams,\n  StarshipsParams,\n  SpeciesParams,\n} from \"../entities\";\nimport { CONTENT_TYPES } from \"../helpers\";\n\n/**\n * get any item by type and params\n * @param {string} type\n * @param {object} params\n * @param {function} onSuccess\n * @param {function} onError\n * @returns {Promise<object>}\n */\nexport const getAnyItemByType = function (type, params, onSuccess, onError) {\n  let endPoint;\n  let paramsByType;\n\n  switch (type) {\n    case CONTENT_TYPES.FILMS: {\n      endPoint = ENDPOINTS.API_GET_FILMS;\n      paramsByType = makeParams(new FilmsParams(params));\n      break;\n    }\n    case CONTENT_TYPES.PEOPLE: {\n      endPoint = ENDPOINTS.API_GET_PEOPLE;\n      paramsByType = makeParams(new PeopleParams(params));\n      break;\n    }\n    case CONTENT_TYPES.PLANETS: {\n      endPoint = ENDPOINTS.API_GET_PLANETS;\n      paramsByType = makeParams(new PlanetsParams(params));\n      break;\n    }\n    case CONTENT_TYPES.SPECIES: {\n      endPoint = ENDPOINTS.API_GET_SPICES;\n      paramsByType = makeParams(new SpeciesParams(params));\n      break;\n    }\n    case CONTENT_TYPES.STARSHIPS: {\n      endPoint = ENDPOINTS.API_GET_STARSHIPS;\n      paramsByType = makeParams(new StarshipsParams(params));\n\n      break;\n    }\n    case CONTENT_TYPES.VEHICLES: {\n      endPoint = ENDPOINTS.API_GET_VEHICLES;\n      paramsByType = makeParams(new VehiclesParams(params));\n      break;\n    }\n    default: {\n      endPoint = ENDPOINTS.API_GET_PEOPLE;\n      paramsByType = makeParams(new PeopleParams(params));\n      break;\n    }\n  }\n\n  const config = getRequestConfig(REQUEST_TYPES.GET, endPoint);\n  config.params = paramsByType;\n\n  return new Promise((resolve, reject) => {\n    axios(config)\n      .then((response) => {\n        resolve(response.data);\n        onSuccess && onSuccess(response.data);\n      })\n      .catch((error) => {\n        reject(error);\n        onError && onError(error);\n      });\n  });\n};\n\n/**\n * get single item by type id and params\n * @param {String} type\n * @param {String} id\n * @param {object} params\n * @param {function} onSuccess\n * @param {function} onError\n * @returns {Promise<object>}\n */\nexport const getSingleItemByTypeAndId = function (\n  type,\n  id,\n  params,\n  onSuccess,\n  onError\n) {\n  let endPoint;\n  let paramsByType;\n\n  switch (type) {\n    case CONTENT_TYPES.FILMS: {\n      endPoint = ENDPOINTS.API_GET_FILMS_BY_ID;\n      paramsByType = makeParams(new FilmsParams(params));\n      break;\n    }\n    case CONTENT_TYPES.PEOPLE: {\n      endPoint = ENDPOINTS.API_GET_PEOPLE_BY_ID;\n      paramsByType = makeParams(new PeopleParams(params));\n      break;\n    }\n    case CONTENT_TYPES.PLANETS: {\n      endPoint = ENDPOINTS.API_GET_PLANETS_BY_ID;\n      paramsByType = makeParams(new PlanetsParams(params));\n      break;\n    }\n    case CONTENT_TYPES.SPECIES: {\n      endPoint = ENDPOINTS.API_GET_SPICES_BY_ID;\n      paramsByType = makeParams(new SpeciesParams(params));\n      break;\n    }\n    case CONTENT_TYPES.STARSHIPS: {\n      endPoint = ENDPOINTS.API_GET_STARSHIPS_BY_ID;\n      paramsByType = makeParams(new StarshipsParams(params));\n\n      break;\n    }\n    case CONTENT_TYPES.VEHICLES: {\n      endPoint = ENDPOINTS.API_GET_VEHICLES_BY_ID;\n      paramsByType = makeParams(new VehiclesParams(params));\n      break;\n    }\n    default: {\n      endPoint = ENDPOINTS.API_GET_PEOPLE;\n      paramsByType = makeParams(new PeopleParams(params));\n      break;\n    }\n  }\n\n  const url = replaceUrlPlaceholder(endPoint, \"id\", id);\n\n  const config = getRequestConfig(REQUEST_TYPES.GET, url);\n\n  config.params = paramsByType;\n\n  return new Promise((resolve, reject) => {\n    axios(config)\n      .then((response) => {\n        resolve(response.data);\n        onSuccess && onSuccess(response.data);\n      })\n      .catch((error) => {\n        reject(error);\n        onError && onError(error);\n      });\n  });\n};\n\n// ENDPOINTS.API_GET_PEOPLE\nexport const getAllPeople = function (params, onSuccess, onError) {\n  const config = getRequestConfig(REQUEST_TYPES.GET, ENDPOINTS.API_GET_PEOPLE);\n\n  config.params = makeParams(new PeopleParams(params));\n\n  return new Promise((resolve, reject) => {\n    axios(config)\n      .then((response) => {\n        resolve(response.data);\n        onSuccess && onSuccess(response.data);\n      })\n      .catch((error) => {\n        reject(error);\n        onError && onError(error);\n      });\n  });\n};\n\n// ENDPOINTS.API_GET_PEOPLE_BY_ID\nexport const getPeopleById = function (id, params, onSuccess, onError) {\n  const url = replaceUrlPlaceholder(ENDPOINTS.API_GET_PEOPLE_BY_ID, \"id\", id);\n\n  const config = getRequestConfig(REQUEST_TYPES.GET, url);\n\n  config.params = makeParams(new PeopleParams(params));\n\n  return new Promise((resolve, reject) => {\n    axios(config)\n      .then((response) => {\n        resolve(response.data);\n        onSuccess && onSuccess(response.data);\n      })\n      .catch((error) => {\n        reject(error);\n        onError && onError(error);\n      });\n  });\n};\n\n// ENDPOINTS.API_GET_FILMS\nexport const getAllFilms = function (params, onSuccess, onError) {\n  const config = getRequestConfig(REQUEST_TYPES.GET, ENDPOINTS.API_GET_FILMS);\n\n  config.params = makeParams(new FilmsParams(params));\n\n  return new Promise((resolve, reject) => {\n    axios(config)\n      .then((response) => {\n        resolve(response.data);\n        onSuccess && onSuccess(response.data);\n      })\n      .catch((error) => {\n        reject(error);\n        onError && onError(error);\n      });\n  });\n};\n\n// ENDPOINTS.API_GET_FILMS_BY_ID\nexport const getFilmById = function (id, params, onSuccess, onError) {\n  const url = replaceUrlPlaceholder(ENDPOINTS.API_GET_FILMS_BY_ID, \"id\", id);\n\n  const config = getRequestConfig(REQUEST_TYPES.GET, url);\n\n  config.params = makeParams(new FilmsParams(params));\n\n  return new Promise((resolve, reject) => {\n    axios(config)\n      .then((response) => {\n        resolve(response.data);\n        onSuccess && onSuccess(response.data);\n      })\n      .catch((error) => {\n        reject(error);\n        onError && onError(error);\n      });\n  });\n};\n\n// ENDPOINTS.API_GET_STARSHIPS\nexport const getAllStarships = function (params, onSuccess, onError) {\n  const config = getRequestConfig(\n    REQUEST_TYPES.GET,\n    ENDPOINTS.API_GET_STARSHIPS\n  );\n\n  config.params = makeParams(new StarshipsParams(params));\n\n  return new Promise((resolve, reject) => {\n    axios(config)\n      .then((response) => {\n        resolve(response.data);\n        onSuccess && onSuccess(response.data);\n      })\n      .catch((error) => {\n        reject(error);\n        onError && onError(error);\n      });\n  });\n};\n\n// ENDPOINTS.API_GET_STARSHIPS_BY_ID\nexport const getStarshipById = function (id, params, onSuccess, onError) {\n  const url = replaceUrlPlaceholder(\n    ENDPOINTS.API_GET_STARSHIPS_BY_ID,\n    \"id\",\n    id\n  );\n\n  const config = getRequestConfig(REQUEST_TYPES.GET, url);\n\n  config.params = makeParams(new StarshipsParams(params));\n\n  return new Promise((resolve, reject) => {\n    axios(config)\n      .then((response) => {\n        resolve(response.data);\n        onSuccess && onSuccess(response.data);\n      })\n      .catch((error) => {\n        reject(error);\n        onError && onError(error);\n      });\n  });\n};\n\n// ENDPOINTS.API_GET_VEHICLES\nexport const getAllVehicles = function (params, onSuccess, onError) {\n  const config = getRequestConfig(\n    REQUEST_TYPES.GET,\n    ENDPOINTS.API_GET_VEHICLES\n  );\n\n  config.params = makeParams(new VehiclesParams(params));\n\n  return new Promise((resolve, reject) => {\n    axios(config)\n      .then((response) => {\n        resolve(response.data);\n        onSuccess && onSuccess(response.data);\n      })\n      .catch((error) => {\n        reject(error);\n        onError && onError(error);\n      });\n  });\n};\n\n// ENDPOINTS.API_GET_VEHICLES_BY_ID\nexport const getVehicleById = function (id, params, onSuccess, onError) {\n  const url = replaceUrlPlaceholder(ENDPOINTS.API_GET_VEHICLES_BY_ID, \"id\", id);\n\n  const config = getRequestConfig(REQUEST_TYPES.GET, url);\n\n  config.params = makeParams(new VehiclesParams(params));\n\n  return new Promise((resolve, reject) => {\n    axios(config)\n      .then((response) => {\n        resolve(response.data);\n        onSuccess && onSuccess(response.data);\n      })\n      .catch((error) => {\n        reject(error);\n        onError && onError(error);\n      });\n  });\n};\n\n// ENDPOINTS.API_GET_SPICES\nexport const getAllSpices = function (params, onSuccess, onError) {\n  const config = getRequestConfig(REQUEST_TYPES.GET, ENDPOINTS.API_GET_SPICES);\n\n  config.params = makeParams(new SpeciesParams(params));\n\n  return new Promise((resolve, reject) => {\n    axios(config)\n      .then((response) => {\n        resolve(response.data);\n        onSuccess && onSuccess(response.data);\n      })\n      .catch((error) => {\n        reject(error);\n        onError && onError(error);\n      });\n  });\n};\n\n// ENDPOINTS.API_GET_SPICES_BY_ID\nexport const getSpicesById = function (id, params, onSuccess, onError) {\n  const url = replaceUrlPlaceholder(ENDPOINTS.API_GET_SPICES_BY_ID, \"id\", id);\n\n  const config = getRequestConfig(REQUEST_TYPES.GET, url);\n\n  config.params = makeParams(new SpeciesParams(params));\n\n  return new Promise((resolve, reject) => {\n    axios(config)\n      .then((response) => {\n        resolve(response.data);\n        onSuccess && onSuccess(response.data);\n      })\n      .catch((error) => {\n        reject(error);\n        onError && onError(error);\n      });\n  });\n};\n\n// ENDPOINTS.API_GET_PLANETS\nexport const getAllPlanets = function (params, onSuccess, onError) {\n  const config = getRequestConfig(REQUEST_TYPES.GET, ENDPOINTS.API_GET_PLANETS);\n\n  config.params = makeParams(new PlanetsParams(params));\n\n  return new Promise((resolve, reject) => {\n    axios(config)\n      .then((response) => {\n        resolve(response.data);\n        onSuccess && onSuccess(response.data);\n      })\n      .catch((error) => {\n        reject(error);\n        onError && onError(error);\n      });\n  });\n};\n\n// ENDPOINTS.API_GET_PLANETS_BY_ID\nexport const getPlanetById = function (id, params, onSuccess, onError) {\n  const url = replaceUrlPlaceholder(ENDPOINTS.API_GET_PLANETS_BY_ID, \"id\", id);\n\n  const config = getRequestConfig(REQUEST_TYPES.GET, url);\n\n  config.params = makeParams(new PlanetsParams(params));\n\n  return new Promise((resolve, reject) => {\n    axios(config)\n      .then((response) => {\n        resolve(response.data);\n        onSuccess && onSuccess(response.data);\n      })\n      .catch((error) => {\n        reject(error);\n        onError && onError(error);\n      });\n  });\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles.css\";\n\nconst SearchButton = (props) => {\n  const { onClick, text } = props;\n\n  return (\n    <div onClick={onClick} className={\"searchButtonWrapper\"}>\n      <p className={\"searchButtonText\"}>{text}</p>\n    </div>\n  );\n};\n\nSearchButton.propTypes = {\n  onClick: PropTypes.func,\n  text: PropTypes.string,\n};\n\nexport default SearchButton;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles.css\";\nimport SearchButton from \"../SearchButton\";\n\nconst propTypes = {\n  placeholderText: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n  onSearch: PropTypes.func,\n  searchButtonText: PropTypes.string,\n};\n\nconst SearchField = (props) => {\n  const { placeholderText, onChange, value, onSearch, searchButtonText } =\n    props;\n\n  const _onChangeInput = (e) => {\n    onChange(e.target.value);\n  };\n\n  const handleEnterPress = (e) => {\n    if (e.charCode === 13) {\n      onSearch();\n    }\n  };\n\n  return (\n    <div className={\"searchWrapper\"}>\n      <input\n        className={\"searchInput\"}\n        type={\"text\"}\n        placeholder={placeholderText}\n        onChange={_onChangeInput}\n        value={value}\n        onKeyPress={handleEnterPress}\n      />\n      <SearchButton onClick={onSearch} text={searchButtonText} />\n    </div>\n  );\n};\n\nSearchField.propTypes = propTypes;\n\nexport default SearchField;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles.css\";\n\nconst ButtonSwitcher = (props) => {\n  const { buttons, onChange, name } = props;\n  const [selected, setSelected] = useState(buttons[0]);\n\n  useEffect(() => {\n    onChange(selected);\n  }, [selected]);\n\n  const drawButtons = () => {\n    return buttons.map(drawButton);\n  };\n\n  const drawButton = (button) => {\n    return (\n      <div key={button.id} className={\"buttonSwitcher\"}>\n        <input\n          type=\"radio\"\n          name={name}\n          id={button.id}\n          checked={selected.id === button.id}\n          onChange={() => setSelected(button)}\n          className={\"buttonSwitcherInput\"}\n        />\n        <label htmlFor={button.id} className={\"buttonSwitcherLabel\"}>\n          {button.text}\n        </label>\n      </div>\n    );\n  };\n\n  return <div className={\"buttonSwitcherWrapper\"}>{drawButtons()}</div>;\n};\n\nButtonSwitcher.propTypes = {\n  buttons: PropTypes.array,\n};\nButtonSwitcher.defaultProps = {\n  buttons: [],\n  onChange: () => {},\n};\n\nexport default ButtonSwitcher;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getNumberOfPages } from \"../../helpers\";\nimport \"./styles.css\";\n\nconst propTypes = {\n  count: PropTypes.number.isRequired,\n  current: PropTypes.number,\n  onChange: PropTypes.func,\n};\nconst defaultProps = {\n  count: 10,\n  current: 1,\n};\n\nconst Pagination = (props) => {\n  const { count, current, onChange } = props;\n\n  const numberOfButtons = new Array(getNumberOfPages(count)).fill();\n\n  const drawButton = (pageNumber) => {\n    const fixZeroPage = pageNumber + 1;\n\n    return (\n      <div\n        onClick={() => onChange(fixZeroPage)}\n        key={`pp_${fixZeroPage}`}\n        className={`paginationButton ${\n          current === fixZeroPage && \"paginationActiveButton\"\n        }`}\n      >\n        <p className={\"paginationButtonText\"}>{fixZeroPage}</p>\n      </div>\n    );\n  };\n\n  const drawButtons = () => {\n    return numberOfButtons.map((item, index) => drawButton(index));\n  };\n\n  return <div className={\"paginationWrapper\"}>{drawButtons()}</div>;\n};\n\nPagination.propTypes = propTypes;\nPagination.defaultProps = defaultProps;\n\nexport default Pagination;\n","export const getNumberOfPages = (count) => {\n  return Math.ceil(count / 10);\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles.css\";\nimport { makeFormattedFieldName, urlReader } from \"../../helpers\";\n\nconst EXCLUDED_FIELDS = [\n  //urls\n  \"url\",\n  \"homeworld\",\n  //dates\n  \"created\",\n  \"edited\",\n];\nconst ListAnyItem = (props) => {\n  const { item, isLast } = props;\n\n  const drawField = (fieldArr) => {\n    const fieldNameWithoutFormat = fieldArr[0];\n    const formattedFieldName = makeFormattedFieldName(fieldNameWithoutFormat);\n    const fieldBody = fieldArr[1];\n\n    if (EXCLUDED_FIELDS.includes(fieldNameWithoutFormat)) return null;\n\n    if (typeof fieldBody === \"string\") {\n      return (\n        <div className={\"listAnyItemField\"} key={fieldNameWithoutFormat}>\n          <p className={\"listAnyItemFieldText\"}>\n            {formattedFieldName + \": \" + fieldBody}\n          </p>\n        </div>\n      );\n    }\n\n    return null;\n  };\n\n  const drawItemFromObject = () => {\n    const itemFields = Object.entries(item);\n    return itemFields.map((field) => drawField(field));\n  };\n\n  const onItemPress = () => {\n    document.location.pathname = urlReader(item.url);\n  };\n\n  return (\n    <div\n      className={`listAnyItemWrapper ${isLast && \"listAnyItemWrapperLast\"}`}\n      onClick={() => onItemPress(item)}\n    >\n      {item.title && <p className={\"listAnyItemTitle\"}>{item.title}</p>}\n      {item.name && <p className={\"listAnyItemTitle\"}>{item.name}</p>}\n\n      {drawItemFromObject()}\n    </div>\n  );\n};\n\nListAnyItem.propTypes = {\n  item: PropTypes.object.isRequired,\n  isLast: PropTypes.bool,\n};\n\nexport default ListAnyItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ListAnyItem from \"../ListAnyItem\";\nimport \"./styles.css\";\nimport { CONTENT_TYPES } from \"../../helpers\";\n\nconst propTypes = {\n  items: PropTypes.array.isRequired,\n  itemsType: PropTypes.object.isRequired,\n};\nconst defaultProps = {\n  items: [],\n  itemsType: { text: \"Films\", id: CONTENT_TYPES.FILMS },\n};\n\nconst ItemsList = (props) => {\n  const { items, itemsType } = props;\n\n  const drawItems = () => {\n    return items.map((item, index) => drawItem(item, index));\n  };\n\n  const drawItem = (item, index) => {\n    const isLast = index === items.length - 1;\n\n    return (\n      <div key={`it_${item.url}`}>\n        <ListAnyItem item={item} itemsType={itemsType} isLast={isLast} />\n      </div>\n    );\n  };\n\n  return <div className={\"itemsListWrapper\"}>{drawItems()}</div>;\n};\n\nItemsList.propTypes = propTypes;\nItemsList.defaultProps = defaultProps;\n\nexport default ItemsList;\n","import React, { useState, useEffect } from \"react\";\nimport { SearchField, ButtonSwitcher } from \"../../components\";\nimport { CONTENT_TYPES } from \"../../helpers\";\nimport { getAnyItemByType } from \"../../api\";\nimport Pagination from \"../../components/Pagination\";\nimport { MainWrapper } from \"../../containers\";\nimport ItemsList from \"../../components/ItemsList\";\nimport \"./styles.css\";\nimport Header from \"../../components/Header\";\nimport Loader from \"../../components/Loader\";\n\nconst MainScreen = () => {\n  const [query, setQuery] = useState(\"\");\n  const [type, setType] = useState({ text: \"Films\", id: CONTENT_TYPES.FILMS });\n  const [page, setPage] = useState(1);\n  const [count, setCount] = useState(0);\n  const [items, setItems] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    onSearch();\n  }, [page, type]);\n\n  const onSearch = () => {\n    getAnyItemByType(\n      type.id,\n      {\n        page,\n        query,\n      },\n      (response) => {\n        setCount(response.count);\n        setItems(response.results);\n        scrollToTop();\n        setLoading(false);\n        setError(\"\");\n      },\n      () => {\n        setPage(1);\n        setError(\"Something went wrong\");\n        setLoading(false);\n      }\n    );\n  };\n\n  const scrollToTop = () => {\n    window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n  };\n\n  const onChangeQuery = (newQuery) => {\n    setQuery(newQuery);\n  };\n\n  const onChangeType = (newType) => {\n    setQuery(\"\");\n    setPage(1);\n    setType(newType);\n  };\n\n  const onChangePagination = (newPage) => {\n    setPage(newPage);\n  };\n\n  return (\n    <>\n      <Header title={\"Star Wars Search Info\"} />\n      <div className={\"mainScreenRoot\"}>\n        {loading ? (\n          <Loader />\n        ) : (\n          <MainWrapper>\n            <SearchField\n              placeholderText={\"search for\"}\n              onChange={onChangeQuery}\n              value={query}\n              onSearch={onSearch}\n              searchButtonText={\"Search\"}\n            />\n\n            <ButtonSwitcher\n              selected={type}\n              name={\"typeSelector\"}\n              onChange={onChangeType}\n              buttons={[\n                { text: \"Films\", id: CONTENT_TYPES.FILMS },\n                { text: \"People\", id: CONTENT_TYPES.PEOPLE },\n                { text: \"Planets\", id: CONTENT_TYPES.PLANETS },\n                { text: \"Species\", id: CONTENT_TYPES.SPECIES },\n                { text: \"Starships\", id: CONTENT_TYPES.STARSHIPS },\n                { text: \"Vehicles\", id: CONTENT_TYPES.VEHICLES },\n              ]}\n            />\n\n            {!!error && <p>{error}</p>}\n\n            <ItemsList items={items} itemsType={type} />\n\n            <Pagination\n              count={count}\n              current={page}\n              onChange={onChangePagination}\n            />\n          </MainWrapper>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default MainScreen;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { MainScreen, DetailsScreen } from \"./index\";\nimport { CONTENT_TYPES } from \"../helpers\";\n\nfunction RootRouter() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <MainScreen />\n        </Route>\n\n        <Route exact path=\"/films/:id\">\n          <DetailsScreen type={CONTENT_TYPES.FILMS} />\n        </Route>\n        <Route exact path=\"/species/:id\">\n          <DetailsScreen type={CONTENT_TYPES.SPECIES} />\n        </Route>\n        <Route exact path=\"/vehicles/:id\">\n          <DetailsScreen type={CONTENT_TYPES.VEHICLES} />\n        </Route>\n        <Route exact path=\"/people/:id\">\n          <DetailsScreen type={CONTENT_TYPES.PEOPLE} />\n        </Route>\n        <Route exact path=\"/planets/:id\">\n          <DetailsScreen type={CONTENT_TYPES.PLANETS} />\n        </Route>\n        <Route exact path=\"/starships/:id\">\n          <DetailsScreen type={CONTENT_TYPES.STARSHIPS} />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default RootRouter;\n","import \"./App.css\";\nimport RootRouter from \"./screens/RootRouter\";\n\nfunction App() {\n  return <RootRouter />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}